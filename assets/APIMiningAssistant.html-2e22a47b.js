import{_ as e,X as t,Y as o,Z as n,$ as s,a0 as p,a2 as c,G as i}from"./framework-8b8a807b.js";const l={},u=n("h1",{id:"api挖掘助手",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#api挖掘助手","aria-hidden":"true"},"#"),s(" API挖掘助手")],-1),r=n("blockquote",null,[n("p",null,[s("此文章为有能力的开发者准备，用于挖掘API"),n("br"),s(" 感谢各位大佬的分享！")])],-1),d=n("h2",{id:"miniextend",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#miniextend","aria-hidden":"true"},"#"),s(" miniExtend")],-1),k={href:"https://github.com/0-0000/miniExtend/",target:"_blank",rel:"noopener noreferrer"},v=c(`<p>内容较多请于仓库查看内容</p><p>miniExtend资源库Q群：414643957</p><p>miniExtend （迷你世界脚本扩展）是以面相对象方式封装迷你世界 Lua API 的开源扩展包，同时包括了代码和文档，其设计目的是为了简化脚本代码，提高可读性，从而提高脚本开发者的开发效率。</p><h2 id="获取函数参数" tabindex="-1"><a class="header-anchor" href="#获取函数参数" aria-hidden="true">#</a> 获取函数参数</h2><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">function</span> 获取参数名<span class="token punctuation">(</span>fun<span class="token punctuation">)</span>
  <span class="token keyword">local</span> args <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">local</span> hook <span class="token operator">=</span> debug<span class="token punctuation">.</span><span class="token function">gethook</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">local</span> argHook <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">...</span><span class="token punctuation">)</span>
    <span class="token keyword">local</span> info <span class="token operator">=</span> debug<span class="token punctuation">.</span><span class="token function">getinfo</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> k<span class="token punctuation">,</span>v <span class="token keyword">in</span> <span class="token function">pairs</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token keyword">do</span>
      <span class="token comment">--print(k,v)</span>
    <span class="token keyword">end</span>
    <span class="token keyword">if</span> <span class="token string">&quot;pcall&quot;</span> <span class="token operator">~=</span> info<span class="token punctuation">.</span>name <span class="token keyword">then</span>
      <span class="token keyword">return</span>
    <span class="token keyword">end</span>
    <span class="token keyword">for</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span>huge <span class="token keyword">do</span>
      <span class="token keyword">local</span> name<span class="token punctuation">,</span> value <span class="token operator">=</span> debug<span class="token punctuation">.</span><span class="token function">getlocal</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
      <span class="token comment">--print(i, name, value)</span>
      <span class="token keyword">if</span> <span class="token string">&quot;(*temporary)&quot;</span> <span class="token operator">==</span> name <span class="token keyword">then</span>
        debug<span class="token punctuation">.</span><span class="token function">sethook</span><span class="token punctuation">(</span>hook<span class="token punctuation">)</span>
        <span class="token comment">--error(&quot;&quot;)</span>
        <span class="token keyword">return</span>
      <span class="token keyword">end</span>
      table<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> name<span class="token punctuation">)</span>
    <span class="token keyword">end</span>
  <span class="token keyword">end</span>
  debug<span class="token punctuation">.</span><span class="token function">sethook</span><span class="token punctuation">(</span>argHook<span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span>
  <span class="token function">pcall</span><span class="token punctuation">(</span>fun<span class="token punctuation">)</span>
  <span class="token keyword">return</span> args
<span class="token keyword">end</span>
<span class="token comment">--local a = {}</span>
<span class="token comment">--function a:g(b,c)print(&quot;a&quot;)end</span>
<span class="token comment">--a.g()</span>

<span class="token keyword">local</span> <span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token keyword">end</span>
<span class="token keyword">for</span> i<span class="token punctuation">,</span> v <span class="token keyword">in</span> <span class="token function">pairs</span><span class="token punctuation">(</span>获取参数名<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">do</span> <span class="token function">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>v<span class="token punctuation">)</span><span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function m(b,f){const a=i("ExternalLinkIcon");return t(),o("div",null,[u,r,d,n("p",null,[n("a",k,[s("miniExtend开源仓库"),p(a)])]),v])}const y=e(l,[["render",m],["__file","APIMiningAssistant.html.vue"]]);export{y as default};
